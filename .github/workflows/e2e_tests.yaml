# Mizar kind e2e test workflow

name: CI
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: ['3.8.0']
    steps:
      - uses: actions/checkout@v2
      - name: Update apt-get
        run: sudo apt-get update
      - name: Install packages
        run: sudo apt-get install -y build-essential clang-7 llvm-7 libelf-dev python3.8 python3-pip libcmocka-dev lcov python3.8-dev python3-apt pkg-config
      - name: Python3.6
        run: sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
      - name: Python3.8
        run: sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2
      - name: Python3.8 default
        run: sudo update-alternatives --set python3 /usr/bin/python3.8
      - name: Python3.8 symlink fix
        run: sudo ln -s /usr/lib/python3/dist-packages/apt_pkg.cpython-36m-x86_64-linux-gnu.so /usr/lib/python3/dist-packages/apt_pkg.so
      - name: Update pip
        run: python3 -m pip install --upgrade pip
      - name: Install python packages
        run: sudo pip3 install setuptools netaddr docker grpcio grpcio-tools kubernetes
      - name: install kind
        run: |
          ver=$(curl -s https://api.github.com/repos/kubernetes-sigs/kind/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')
          curl -Lo kind "https://github.com/kubernetes-sigs/kind/releases/download/$ver/kind-$(uname)-amd64"
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          git submodule update --init --recursive
      - name: Update Kernel and Linux Headers
        run: printf 'y\nn\n' | sudo ./kernelupdate.sh
      - name: Compile mizar
        run: sudo make clean && make
      - name: Make unittest
        run: sudo make unittest
      - name: Run cli unit tests
        run: ./build/tests/test_cli
      - name: Run daemon unit tests
        run: ./build/tests/test_dmn
      - name: Create kind cluster
        run: sudo ./kind-setup.sh dev 2
      - name: Kubeconfig chown
        if: always()
        run: |
          mkdir -p ${HOME}/.kube
          sudo chown $(id -u):$(id -g) $HOME/.kube/config
          sudo chown -R $(id -u):$(id -g) $HOME/.kube/
      - name: Cluster deployment failure, Dump Operator and daemon Logs
        if: ${{ failure() }}
        run: sudo kubectl get pods | grep mizar-operator | awk '{print $1}' | xargs -i kubectl logs {} && kubectl get pods | grep mizar-daemon | awk '{print $1}' | xargs -i kubectl logs {}
      - name: Setup tmate ssh session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15
      # - name: Run kind e2e test
      #   run: sudo make e2efunctest
      # - name: Test failure, Dump Operator and daemon Logs
      #   if: ${{ failure() }}
      #   run: sudo kubectl get pods | grep mizar-operator | awk '{print $1}' | xargs -i kubectl logs {} && kubectl get pods | grep mizar-daemon | awk '{print $1}' | xargs -i kubectl logs {}
      # - name: Setup tmate ssh session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   timeout-minutes: 15
