syntax = "proto3";
package mizar;

import "google/protobuf/empty.proto";

// May need to return a code in the event of a temporary failure for retry.
service BuiltinsService {

    // For Services/Service Endpoints, network controller may want to annotate the Endpoints.
    // If Endpoints are not annotated, there will be many updates from unwanted endpoints.
    rpc CreateService(BuiltinsServiceEndpointMessage) returns (google.protobuf.Empty) {}
    rpc UpdateService(BuiltinsServiceEndpointMessage) returns (google.protobuf.Empty) {}
    rpc ResumeService(BuiltinsServiceEndpointMessage) returns (google.protobuf.Empty) {}

    rpc UpdateServiceEndpoint(BuiltinsServiceMessage) returns (google.protobuf.Empty) {}
    rpc ResumeServiceEndpoint(BuiltinsServiceMessage) returns (google.protobuf.Empty) {}
    rpc CreateServiceEndpoint(BuiltinsServiceMessage) returns (google.protobuf.Empty) {}

    rpc ResumePod(BuiltinsPodMessage) returns (google.protobuf.Empty) {}
    rpc UpdatePod(BuiltinsPodMessage) returns (google.protobuf.Empty) {}
    rpc CreatePod(BuiltinsPodMessage) returns (google.protobuf.Empty) {}

    rpc CreateNode(BuiltinsNodeMessage) returns (google.protobuf.Empty) {}
    rpc ResumeNode(BuiltinsNodeMessage) returns (google.protobuf.Empty) {}
    rpc UpdateNode(BuiltinsNodeMessage) returns (google.protobuf.Empty) {}
}

message BuiltinsNodeMessage {
  string ip = 1;
}

message BuiltinsPodMessage {
  string name = 1;
  string host_ip = 2;
  string namespace = 3;
  string tenant = 4;
  string arktos_network = 5;
  string phase = 6;
  repeated InterfacesMessage interfaces = 7;
}

message BuiltinsServiceMessage {
  string name = 1;
  string ip = 2;
}

message BuiltinsServiceEndpointMessage {
  string name = 1;
  string service_ip = 2;
  repeated PortsMessage ports = 3;
}

message PortsMessage {
  string frontend_port = 1;
  string backend_port = 2;
  string protocol = 3;
}

message InterfacesMessage {
  string name = 1;
  string ip = 2;
  string subnet = 3;
}
