syntax = "proto3";

import "google/protobuf/empty.proto";

service CniService {
  rpc AddPod(Pod) returns (google.protobuf.Empty) {}
  rpc DelPod(PodId) returns (google.protobuf.Empty) {}
  rpc Cni(CniParameters) returns (CniResults) {}
}

// The pod built-in operator, will populate this message and pass it to the CNI
// Service to create the Pod
message PodId {
    string name = 1;
}

enum PodProvider {
  K8S = 0;
  ARKTOS = 1;
}

message Pod {
    string name = 1;
    string veth_name = 2;
    string mac = 3;
    string netns = 4;
    string ip = 5;
    string prefix = 6;
    string gw = 7;
    PodProvider provider = 8;
}

// The CNI client will create this message from the CNI parameters in the stdin
// and the environment variables
message CniParameters {
    string command = 1;
    string container_id = 2;
    string k8s_pod_name = 3;
    string netns = 4;
    string cni_version = 5;
}

// The CNI method returns this message on calling the Cni RPC
message CniResults {
   string result = 1;
   int32 value = 2;
}
