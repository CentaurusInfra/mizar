# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from mizar.proto import cni_pb2 as mizar_dot_proto_dot_cni__pb2


class CniServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddPod = channel.unary_unary(
                '/CniService/AddPod',
                request_serializer=mizar_dot_proto_dot_cni__pb2.Pod.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DelPod = channel.unary_unary(
                '/CniService/DelPod',
                request_serializer=mizar_dot_proto_dot_cni__pb2.PodId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Cni = channel.unary_unary(
                '/CniService/Cni',
                request_serializer=mizar_dot_proto_dot_cni__pb2.CniParameters.SerializeToString,
                response_deserializer=mizar_dot_proto_dot_cni__pb2.CniResults.FromString,
                )


class CniServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def AddPod(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DelPod(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Cni(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CniServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddPod': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPod,
                    request_deserializer=mizar_dot_proto_dot_cni__pb2.Pod.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DelPod': grpc.unary_unary_rpc_method_handler(
                    servicer.DelPod,
                    request_deserializer=mizar_dot_proto_dot_cni__pb2.PodId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Cni': grpc.unary_unary_rpc_method_handler(
                    servicer.Cni,
                    request_deserializer=mizar_dot_proto_dot_cni__pb2.CniParameters.FromString,
                    response_serializer=mizar_dot_proto_dot_cni__pb2.CniResults.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CniService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CniService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def AddPod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CniService/AddPod',
            mizar_dot_proto_dot_cni__pb2.Pod.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DelPod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CniService/DelPod',
            mizar_dot_proto_dot_cni__pb2.PodId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Cni(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CniService/Cni',
            mizar_dot_proto_dot_cni__pb2.CniParameters.SerializeToString,
            mizar_dot_proto_dot_cni__pb2.CniResults.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
